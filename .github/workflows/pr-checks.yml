name: Pull Request Checks

on:
  pull_request:
    branches: [main, develop]
    types: [opened, synchronize, reopened, ready_for_review]
  pull_request_review:
    types: [submitted]

permissions:
  contents: read
  pull-requests: write
  checks: write
  statuses: write

concurrency:
  group: pr-checks-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  # Job to analyze PR changes and set up conditional execution
  pr-analysis:
    name: PR Analysis
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    outputs:
      has-code-changes: ${{ steps.changes.outputs.code }}
      has-config-changes: ${{ steps.changes.outputs.config }}
      has-workflow-changes: ${{ steps.changes.outputs.workflows }}
      has-docs-changes: ${{ steps.changes.outputs.docs }}
      pr-size: ${{ steps.pr-size.outputs.size }}
      
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0

      - name: Detect changes
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        id: changes
        with:
          base: ${{ github.event.pull_request.base.sha }}
          filters: |
            code:
              - 'src/**'
              - 'public/**'
              - '*.ts'
              - '*.tsx'
              - '*.js'
              - '*.jsx'
            config:
              - 'package*.json'
              - '*.config.*'
              - 'tsconfig.json'
              - '.eslintrc*'
              - '.prettierrc*'
            workflows:
              - '.github/workflows/**'
              - '.github/dependabot.yml'
            docs:
              - '**/*.md'
              - 'docs/**'

      - name: Calculate PR size
        id: pr-size
        run: |
          # Get the number of changed lines
          ADDITIONS=$(gh api repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }} --jq '.additions')
          DELETIONS=$(gh api repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }} --jq '.deletions')
          TOTAL_CHANGES=$((ADDITIONS + DELETIONS))
          
          if [ $TOTAL_CHANGES -lt 50 ]; then
            echo "size=small" >> $GITHUB_OUTPUT
          elif [ $TOTAL_CHANGES -lt 200 ]; then
            echo "size=medium" >> $GITHUB_OUTPUT
          else
            echo "size=large" >> $GITHUB_OUTPUT
          fi
          
          echo "Total changes: $TOTAL_CHANGES lines"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Enhanced code quality checks for PRs
  pr-quality-checks:
    name: PR Quality Checks
    runs-on: ubuntu-latest
    needs: pr-analysis
    if: needs.pr-analysis.outputs.has-code-changes == 'true'
    
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Run ESLint with PR-specific rules
        run: |
          echo "Running ESLint on changed files..."
          # Get changed files
          git diff --name-only ${{ github.event.pull_request.base.sha }}..HEAD | \
          grep -E '\.(ts|tsx|js|jsx)$' > changed-files.txt || echo "No JS/TS files changed"
          
          if [ -s changed-files.txt ]; then
            npx eslint $(cat changed-files.txt | tr '\n' ' ') --format=json --output-file=eslint-results.json || true
            npx eslint $(cat changed-files.txt | tr '\n' ' ') --format=stylish
          else
            echo "No JavaScript/TypeScript files to lint"
            echo "[]" > eslint-results.json
          fi

      - name: Check TypeScript on changed files
        run: |
          echo "Running TypeScript compiler on project..."
          npm run type-check

      - name: Check code formatting
        run: |
          echo "Checking code formatting..."
          git diff --name-only ${{ github.event.pull_request.base.sha }}..HEAD | \
          xargs npx prettier --check || {
            echo "Code formatting issues found. Run 'npm run prettier' to fix."
            exit 1
          }

      - name: Run bundle analysis
        if: needs.pr-analysis.outputs.pr-size != 'small'
        run: |
          echo "Running bundle analysis for larger PRs..."
          npm run build:analyze || echo "Bundle analysis not available"

      - name: Upload lint results
        if: always()
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        with:
          name: pr-lint-results
          path: |
            eslint-results.json
            changed-files.txt
          retention-days: 7

  # Build preview for PR
  build-preview:
    name: Build Preview
    runs-on: ubuntu-latest
    needs: pr-analysis
    if: needs.pr-analysis.outputs.has-code-changes == 'true'
    
    steps:
      - name: Checkout PR
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Build preview
        run: npm run build
        env:
          NODE_ENV: production
          SITE_URL: https://farzulla.org

      - name: Generate build comparison
        id: build-comparison
        run: |
          # Get main branch build size for comparison
          git fetch origin main
          git checkout origin/main
          npm ci --prefer-offline --no-audit
          npm run build
          MAIN_SIZE=$(du -sb out | cut -f1)
          
          # Switch back to PR branch and build
          git checkout ${{ github.event.pull_request.head.sha }}
          npm ci --prefer-offline --no-audit
          npm run build
          PR_SIZE=$(du -sb out | cut -f1)
          
          # Calculate difference
          SIZE_DIFF=$((PR_SIZE - MAIN_SIZE))
          SIZE_DIFF_MB=$(echo "scale=2; $SIZE_DIFF / 1024 / 1024" | bc -l)
          
          echo "main-size=$MAIN_SIZE" >> $GITHUB_OUTPUT
          echo "pr-size=$PR_SIZE" >> $GITHUB_OUTPUT
          echo "size-diff=$SIZE_DIFF" >> $GITHUB_OUTPUT
          echo "size-diff-mb=$SIZE_DIFF_MB" >> $GITHUB_OUTPUT

      - name: Upload preview build
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        with:
          name: pr-preview-build
          path: out/
          retention-days: 7

      - name: Comment build results
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const sizeDiffMB = parseFloat('${{ steps.build-comparison.outputs.size-diff-mb }}');
            const prSize = '${{ needs.pr-analysis.outputs.pr-size }}';
            
            let emoji = '📦';
            let sizeText = '';
            
            if (sizeDiffMB > 1) {
              emoji = '📈';
              sizeText = `Build size increased by ${sizeDiffMB}MB`;
            } else if (sizeDiffMB < -1) {
              emoji = '📉';
              sizeText = `Build size decreased by ${Math.abs(sizeDiffMB)}MB`;
            } else {
              sizeText = 'Build size unchanged';
            }
            
            const body = `## ${emoji} Build Preview Results
            
            **PR Size**: ${prSize}
            **Build Status**: ✅ Success
            **${sizeText}**
            
            📊 **Build Details**:
            - Main branch size: ${(parseInt('${{ steps.build-comparison.outputs.main-size }}') / 1024 / 1024).toFixed(2)}MB
            - PR branch size: ${(parseInt('${{ steps.build-comparison.outputs.pr-size }}') / 1024 / 1024).toFixed(2)}MB
            
            <!-- Generated by PR Checks workflow -->`;
            
            // Find existing comment and update it, or create new one
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const existingComment = comments.data.find(comment => 
              comment.body.includes('<!-- Generated by PR Checks workflow -->')
            );
            
            if (existingComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }

  # PR validation summary
  pr-validation:
    name: PR Validation Summary
    runs-on: ubuntu-latest
    needs: [pr-analysis, pr-quality-checks, build-preview]
    if: always() && github.event.pull_request.draft == false
    
    steps:
      - name: Validation Summary
        run: |
          echo "## PR Validation Summary"
          echo "PR Size: ${{ needs.pr-analysis.outputs.pr-size }}"
          echo "Has Code Changes: ${{ needs.pr-analysis.outputs.has-code-changes }}"
          echo "Has Config Changes: ${{ needs.pr-analysis.outputs.has-config-changes }}"
          echo "Quality Checks: ${{ needs.pr-quality-checks.result }}"
          echo "Build Preview: ${{ needs.build-preview.result }}"
          
          # Check if any critical checks failed
          if [[ "${{ needs.pr-quality-checks.result }}" == "failure" ]]; then
            echo "❌ PR validation failed - code quality issues detected"
            exit 1
          elif [[ "${{ needs.build-preview.result }}" == "failure" ]]; then
            echo "❌ PR validation failed - build errors detected"
            exit 1
          else
            echo "✅ PR validation passed successfully"
          fi

  # Auto-assign reviewers based on changes
  assign-reviewers:
    name: Auto-assign Reviewers
    runs-on: ubuntu-latest
    needs: pr-analysis
    if: github.event.action == 'opened' && github.event.pull_request.draft == false
    
    steps:
      - name: Assign reviewers based on changes
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const hasCodeChanges = '${{ needs.pr-analysis.outputs.has-code-changes }}' === 'true';
            const hasWorkflowChanges = '${{ needs.pr-analysis.outputs.has-workflow-changes }}' === 'true';
            const prSize = '${{ needs.pr-analysis.outputs.pr-size }}';
            
            let reviewers = [];
            let labels = ['review-needed'];
            
            // Add labels based on PR characteristics
            if (hasCodeChanges) labels.push('code-changes');
            if (hasWorkflowChanges) labels.push('ci/cd-changes');
            if (prSize === 'large') labels.push('large-pr');
            
            // For this example, we'll add a default reviewer
            // In practice, you'd customize this based on your team structure
            if (hasCodeChanges || hasWorkflowChanges) {
              reviewers.push('studiofarzulla');
            }
            
            // Add labels
            if (labels.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                labels: labels
              });
            }
            
            // Request reviewers (only if not empty and not author)
            if (reviewers.length > 0 && !reviewers.includes(context.actor)) {
              await github.rest.pulls.requestReviewers({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number,
                reviewers: reviewers
              });
            }